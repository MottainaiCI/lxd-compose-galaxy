
#-------------------------------------------#
# Oracle Database project customization
#-------------------------------------------#
oracledb:
  # Enable/Disable storage mount from host.
  enable_storage_from_host: false

  # Path of the host to mount in the container.
  host_data_path: /data/CONTAINER_STORAGE/oracle_container

#-------------------------------------------#
# Mottainai Service project customization
#-------------------------------------------#
mottainai:
  # Enable/Disable storage mount from host.
  enable_storage_from_host: false

  # Enable/Disable binding of the port 3000 to host.
  # If you use a different port just edit the mottainai-dashboard profile.
  enable_dashboard_host_binding: false

  # Enable HTTPS on dashboard
  enable_dashboard_ssl: true

  # Using arangodb configuration
  enable_arangodb_backend: true

  # Enable Nginx Frontend
  enable_nginx_frontend: true

  # Enable binding on host port
  enable_nginx_host_binding: true

  # Enable integration with lenencrypt
  enable_nginx_lenencrypt: false

  # Using privileged containers for services
  privileged_containers: true

  # Mottainai agent directory with
  # clients cert tree.
  # By default using the project directory.
  # If the path is relative then is based
  # on envs/mottainai-agent directory.
  #  agent_lxd_local_dir: "../lxd-conf/"
  agent_lxd_local_dir: "/tmp/lxd-conf"

  # Sync local lxd-config dir to container (true)
  # or not (false).
  agent_lxd_config_dir_sync: false

  # Mount the host LXD socker inside the container
  # (true) or not (false).
  agent_lxd_socket_host: false
  agent_lxd_gid: 994

  # Enable local docker host service in the
  # agent node.
  agent_docker_local: false

  # Mottainai token to use with nginx reverse proxy.
  # This is needed until Mottainai will support public namespace.
  token: "XXXXXXXX"

  # Define the list of the public namespace to configure
  # in the nginx reverse proxy.
  public_namespaces:
    - namespace1

#-------------------------------------------#
# Docker Registry Service options
#-------------------------------------------#
docker_registry:
  enable_mirror: false
  enable_webui: false
  privileged_containers: true
  ubuntu_container: false
  host_binding: false
  basic_auth: false

luet:
  enable_xfs_storage: true
  xfs_host_path: "/storage/docker/"
  docker_host_privileged: true

  # Enable using of docker host container
  enable_docker_host: false
  docker_host: docker-overlay2.mottainai.local:2376

  # Using ubuntu container for docker (true)
  # or macaroni os (false)
  docker_host_ubuntu: false

  # Enable this if you use docker registry
  # with self-signed certificate
  docker_registry: true

  # Enable the fetch of the artefacts generated.
  # locally under ./repo
  pull_artefacts_locally: true

#-------------------------------------------#
# MongoDB customization
#-------------------------------------------#
mongo:
  use_lts: true
  replicaset_nodes: 1
  enterprise: false
  version: "5.0"
  #version: "4.4"

#-------------------------------------------#
# MySQL 8 Cluster customization
#-------------------------------------------#
mysql8:
  replicaset_nodes: 1
  router_nodes: 1

#-------------------------------------------#
# PostgreSQL customization
#-------------------------------------------#
postgres:
  nodes: 1
  # Available slot are 13|11
  slot: 13
  # Using the host persistence (true) or
  # not (false). You need load psql_data profile.
  persistence_data: false

#-------------------------------------------#
# Steam OS params
#-------------------------------------------#
steam_user_id: "1000"
steam_user_gid: "1004"

#-------------------------------------------#
# Funtoo Infra params
#-------------------------------------------#
funtoo_infra:
  macaronios: true

#-------------------------------------------#
# General params
#-------------------------------------------#
connection: "local"
ephemeral: true
default_ubuntu_image: "ubuntu/22.04"
default_ubuntu_lts_image: "ubuntu/20.04"
default_internal_domain: "mottainai.local"

lxd_socket_path: "/var/lib/lxd/unix.socket"

#-------------------------------------------#
# Mattermost params
#-------------------------------------------#
mattermost:
  # Set this to false to download mattermost
  # tarball directly instead using the Macaroni
  # package.
  luet_install: true
  persistence_data: false

#-------------------------------------------#
# LXD testing params
#-------------------------------------------#
lxd_testing:
  bootstrap_images:

    - name: macaroni-funtoo
      image_server: macaroni
      image_source: macaroni/funtoo-minimal

    - name: macaroni-funtoo-systemd
      image_server: macaroni
      image_source: macaroni/funtoo-systemd-minimal

    - name: funtoo
      image_server: "macaroni"
      image_source: funtoo/stage3

    - name: gentoo
      image_source: gentoo/openrc

    - name: fedora
      image_source: fedora/35

    - name: devuan
      image_source: devuan/beowulf

    - name: debian
      image_source: debian/12

    - name: archlinux
      image_source: archlinux

    - name: rockylinux
      image_source: rockylinux/8

    - name: ubuntu
      image_source: ubuntu/21.10

