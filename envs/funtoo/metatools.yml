# Author: Daniele Rondina, geaaru@funtoo.org
# Description: Setup Simplestreams builder container

version: "1"

template_engine:
  engine: "mottainai"

include_profiles_files:
- ../common/profiles/net-mottainai0.yml
- ../common/profiles/default.yml
- ../common/profiles/flavor-medium.yml
- ../common/profiles/loop.yml
- ../common/profiles/docker.yml
- ../common/profiles/privileged.yml

include_networks_files:
- ../common/networks/mottainai0.yml

include_commands_files:
- commands/reposcan-gentoo-portage.yml
- commands/reposcan-geaaru-overlay.yml
- commands/reposcan-funtoo-kits.yml
- commands/reposcan-funtoo-next-kits.yml

projects:

  - name: "metatools-services"
    description: |
      Run metatools tasks inside containers.

    vars:
      - envs:
          LUET_NOLOCK: "true"
          LUET_YES: "true"
          METATOOLS_WORKSPACE: "/reposcan"
          repo: "https://code.funtoo.org/bitbucket/scm/~geaaru/funtoo-metatools.git"
          repo_branch: "master"

          subpop_repo: "https://code.funtoo.org/bitbucket/scm/~drobbins/subpop.git"
          subpop_branch: "legacy"

    hooks:
      - event: post-node-creation
        commands:
          # DHCP seems slow
          - sleep 5

      - event: post-node-creation
        flags:
          - mongodb_config
        commands:
          - chown mongodb:mongodb /var/lib/mongodb /var/log/mongodb
          - /etc/init.d/mongodb start && sleep 2

      - event: pre-node-sync
        flags:
          - upgrade
        commands:
          - luet repo update && luet upgrade && luet cleanup

      # Until reposcan will be fixed on master. We need to downgrade
      # to subpop 0.4.x
      - event: pre-node-sync
        flags:
          - subpop_clone
        commands:
          - >-
            if [ ! -d /subpop ] ; then
            echo "Cloning ${subpop_repo} for branch ${subpop_branch}..." &&
            git clone ${subpop_repo} -b ${subpop_branch} /subpop || exit 1 ;
            fi

      - event: pre-node-sync
        flags:
          - clone_repo
        commands:
          - eval 'rm -rf /repo || true'
          - echo "Cloning ${repo} for branch ${repo_branch}..."
          - git clone ${repo} -b ${repo_branch} /repo

    groups:
      - name: "metatools::reposcan"
        description: "Run container where generate Reposcan files."

        common_profiles:
          - default
          - net-mottainai0
          - docker
          - privileged
          - loop

        # Create the environment container as ephemeral or not.
        ephemeral: {{ .Values.ephemeral }}
        connection: "{{ .Values.connection }}"

        nodes:
          - name: reposcan
            image_source: "macaroni/funtoo-metatools"
            image_remote_server: "macaroni"

            hooks:

              {{- if eq .Values.setup_git_credentials "true" }}
              - event: pre-node-sync
                flags:
                  - set_git_credentials
                commands:
                  - >-
              {{- if .Values.setup_custom_hosts }}
                    echo "{{ .Values.setup_custom_hosts }}" >> /etc/hosts
              {{- end }}
                    echo "https://${user}:${pass}@${scm_url}" > ~/.git-credentials &&
                    git config --global credential.helper 'store'
              {{- end }}


              - event: pre-node-sync
                flags:
                  - setup_portage_specs
                commands:
                  - eval 'rm -rf /reposcan || true'
                  - mkdir /reposcan/specs -p
                  - echo "${portage_specs}" | yq r -P - > /reposcan/specs/portage.yml
                  # Set commit hash if it's available
                  - >-
                    if [ -n "${portage_commit_sha1}" ] ; then
                    yq w -i /reposcan/specs/portage.yml 'commit_sha1' "${portage_commit_sha1}" ;
                    fi

              - event: pre-node-sync
                flags:
                  - setup_overlay
                commands:
                  - echo "${overlay_specs}" | yq r -P -
                  - echo "${overlay_specs}" | yq r -P - > /reposcan/specs/overlay.yml
                  - >-
                    if [ -n "${overlay_commit_sha1}" ] ; then
                    yq w -i /reposcan/specs/overlay.yml 'commit_sha1' "${overlay_commit_sha1}" ;
                    fi

              - event: pre-node-sync
                flags:
                  - generate_portage_json
                commands:
                  - >-
                    cd /repo &&
                    export REPOSCAN_OPTS="--specs /reposcan/specs/portage.yml" &&
                    if [ -n "${overlay_specs}" ] ; then
                    REPOSCAN_OPTS="$REPOSCAN_OPTS /reposcan/specs/overlay.yml" ;
                    fi &&
                    PYTHONPATH=/subpop:. ./bin/reposcan $REPOSCAN_OPTS

              - event: post-node-sync
                node: host
                flags:
                  - pull_jsons
                commands:
                  - >-
                    eval 'rm -rf kit_cache || true' &&
                    lxc file pull {{ .Values.connection }}:reposcan/reposcan/repo_tmp/tmp/kit_cache/ .
                    --recursive

      - name: "metatools::reposcan-funtoo-kits"
        description: "Run container where generate Reposcan files of Funtoo Kits."

        common_profiles:
          - default
          - net-mottainai0
          - docker
          - privileged
          #- loop

        # Create the environment container as ephemeral or not.
        ephemeral: {{ .Values.ephemeral }}
        connection: "{{ .Values.connection }}"

        nodes:
          - name: reposcan-funtoo
            image_source: "macaroni/funtoo-metatools"
            image_remote_server: "macaroni"

            hooks:

              {{- if eq .Values.setup_git_credentials "true" }}
              - event: pre-node-sync
                flags:
                  - set_git_credentials
                commands:
                  - >-
              {{- if .Values.setup_custom_hosts }}
                    echo "{{ .Values.setup_custom_hosts }}" >> /etc/hosts &&
              {{- end }}
                    echo "https://${user}:${pass}@${scm_url}" > ~/.git-credentials &&
                    git config --global credential.helper 'store'
              {{- end }}

              - event: pre-node-sync
                flags:
                  - setup_portage_specs
                commands:
                  - eval 'rm -rf /reposcan || true'
                  - mkdir /reposcan/specs -p

                  - >-
                    for i in $(echo ${kits} | jq .[] -rc) ; do
                    name=$(echo $i | jq '.name' -r) ;
                    echo "${i}" | yq r -P - > /reposcan/specs/${name}.yml ;
                    cat /reposcan/specs/${name}.yml ;
                    done

              - event: pre-node-sync
                flags:
                  - generate_portage_json
                commands:
                  - >-
                    cd /repo &&
                    export REPOSCAN_OPTS="--specs" &&
                    for i in $(echo ${kits} | jq .[] -rc) ; do
                    name=$(echo $i | jq '.name' -r) ;
                    REPOSCAN_OPTS="$REPOSCAN_OPTS /reposcan/specs/${name}.yml" ;
                    done &&
                    PYTHONPATH=/subpop:. ./bin/reposcan $REPOSCAN_OPTS
                  # Store git version of every kits used to generate specs.
                  - >-
                    export dir="/reposcan/repo_tmp/tmp/kit_cache/kits-versions" &&
                    mkdir ${dir} -p &&
                    for i in $(echo ${kits} | jq .[] -rc) ; do
                    name=$(echo $i | jq '.name' -r) ;
                    if [ -d /repo_tmp/dest-trees/${name} ] ; then
                    cd /repo_tmp/dest-trees/${name} ;
                    kit_fixups=$(git log -1 | grep kit-fixups | awk '{ print $2 }') &&
                    gentoo_staging=$(git log -1 | grep gentoo-staging | awk '{ print $2 }') &&
                    commit=$(git log -1 | grep commit | awk '{ print $2 }') &&
                    echo "kit-fixups: \"${kit_fixups}\"" > ${dir}/${name}.yml &&
                    echo "gentoo-staging: \"${gentoo_staging}\"" >> ${dir}/${name}.yml &&
                    echo "commit: \"${commit}\"" >> ${dir}/${name}.yml ;
                    fi ;
                    done

              - event: post-node-sync
                node: host
                flags:
                  - pull_jsons
                commands:
                  - >-
                    eval 'rm -rf kit_cache || true' &&
                    lxc file pull {{ .Values.connection }}:reposcan-funtoo/reposcan/repo_tmp/tmp/kit_cache/ .
                    --recursive

