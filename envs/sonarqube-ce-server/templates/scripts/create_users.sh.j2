#!/bin/bash

set -e
source "$(dirname $0)"/automation_tools.sh

if [[ -z "$sonar_admin_password" ]]; then
   admin_user_or_token="$sonar_admin_token"
   admin_password=""
elif [[ -z "$sonar_admin_token" ]]; then
   admin_user_or_token={{ sonar_server_config.admin.username }}
   admin_password="$sonar_admin_password"
else
   echo "An Admin Token or Password should be provided" >&2
fi

temp_json_array=()

{% for user in sonar_server_config.users %}
if [[ $(check_user_exists -u {{ user.username }}) == "0" ]]; then
   echo "Creating user {{ user.username }}..."
   static_password={{ user.password }}
   generated_password=$(generate_password)
   user_password=${static_password:-$generated_password}
   create_user -a "$admin_user_or_token" -c "$admin_password" {{ user.username }} "$user_password"
   user_credentials=$(echo "{\"username\": \"{{ user.username }}\", \"password\": \"$user_password\"}" | jq -M -r)
   temp_json_array+=("$user_credentials")
else
   echo "User {{ user.username }} already exists, skipping creation..."
fi
{% endfor %}



mkdir -p "$SONAR_CREDENTIALS_DIR"
test -f "$SONAR_USERS_FILE" || echo '{"users": []}' | jq -M -r > "$SONAR_USERS_FILE"
echo "${temp_json_array[@]}"| jq -n '.users |= [inputs]' > "$SONAR_NEW_USERS_FILE"
for i in $(jq  '.users[] | .username ' -M -r "$SONAR_NEW_USERS_FILE") ; do
   user_obj=$(jq  ".users[] | select(.username==\"$i\")" -M -r "$SONAR_NEW_USERS_FILE")
   # NOTE: using tmp file, not a good idea using same file as input and output in a single pipeline
   jq -M ".users + [${user_obj}]" "$SONAR_USERS_FILE" | jq -n '.users |= inputs' > "$SONAR_USERS_FILE".tmp
   mv "$SONAR_USERS_FILE".tmp "$SONAR_USERS_FILE"
done
rm "$SONAR_NEW_USERS_FILE"
