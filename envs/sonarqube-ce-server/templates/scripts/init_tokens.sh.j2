#!/bin/bash

source "$(dirname $0)"/automation_tools.sh

if [[ -z "$sonar_admin_password" ]]; then
   admin_user_or_token="$sonar_admin_token"
   admin_password=""
elif [[ -z "$sonar_admin_token" ]]; then
   admin_user_or_token={{ sonar_server_config.admin.username }}
   admin_password="$sonar_admin_password"
else
   echo "An Admin Token or Password should be provided" >&2
fi

{% for user in sonar_server_config.users %}
if [[ $(check_user_has_token -u {{ user.username }}) == "0" ]]; then
   echo "Generating token for user {{ user.username }}..."
   generated_token=$(create_user_token_simple -a "$admin_user_or_token" -c "$admin_password" {{ user.username }} {{ user.username }}-token)
   token_credentials="{\"token_name\": \"{{ user.username }}-token\", \"token\": \"$generated_token\"}"
   echo $(jq "walk (if type==\"object\" and .username==\"{{ user.username }}\" then . +=$token_credentials else . end)" -M -r "$SONAR_USERS_FILE") | jq -M -r > $SONAR_USERS_FILE.tmp
   mv "$SONAR_USERS_FILE".tmp "$SONAR_USERS_FILE"
   echo "Generated token for user {{ user.username }}."
else
   echo "User {{ user.username }} already has token, skipping generation..."
fi
{% endfor %}