envs:
  nginx_reset_htpasswd: "1"
  nginx_auth_basic_files:
    - path: /etc/registry
      users:
        - user: "geaaru"
          pwd: "pass"

  reg_server_systemd_override: |

    [Service]
    Environment=DOCKER_REGISTRY=docker-registry1.mottainai.local:5000
    Environment=REG_OPTS=-k -p 8080

  docker_registry_ssl_cert_conf: |

    HOME = envs/docker-registry/files
    RANDFILE = /tmp/rnd

    [ req ]
    #default_bits = 4096
    #default_keyfile = privkey.pem
    distinguished_name = req_distinguished_name
    req_extensions = v3_req
    x509_extensions = v3_req
    prompt = no
    # string_mask = utf8only

    [ req_distinguished_name ]
    #countryName_default = IT
    C = IT
    #stateOrProvinceName_default = Earth
    ST = Earth
    L = Italy
    OU = MottainaiCI Organization
    CN = COMMON_NAME
    #organizationName_default = MottainaiCI Organization
    #organizationalUnitName_default = LXD Compose Unit
    #commonName_default = COMMON_NAME
    #emailAddress_default = geaaru@funtoo.org

    [ v3_req ]
    # keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    keyUsage = keyEncipherment, dataEncipherment
    extendedKeyUsage = serverAuth, clientAuth
    subjectAltName = @alt_names

    [alt_names]
    DNS.1 = COMMON_NAME

  docker_registry_mirror_ssl_cert_conf: |

    HOME = envs/docker-registry/files
    RANDFILE = /tmp/rnd

    [ req ]
    #default_bits = 4096
    #default_keyfile = privkey.pem
    distinguished_name = req_distinguished_name
    req_extensions = v3_req
    #x509_extensions = v3_ca
    prompt = no
    # string_mask = utf8only

    [ req_distinguished_name ]
    #countryName_default = IT
    C = IT
    #stateOrProvinceName_default = Earth
    ST = Earth
    L = Italy
    OU = MottainaiCI Organization
    CN = COMMON_NAME
    #organizationName_default = MottainaiCI Organization
    #organizationalUnitName_default = LXD Compose Unit
    #commonName_default = COMMON_NAME
    #emailAddress_default = geaaru@funtoo.org

    [ v3_req ]
    # keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    keyUsage = keyEncipherment, dataEncipherment
    extendedKeyUsage = serverAuth, clientAuth
    subjectAltName = @alt_names

    [alt_names]
    DNS.1 = COMMON_NAME

  docker_registry_config:
    version: 0.1
    log:
      accesslog:
        disabled: false
      level: info
      formater: text
      fields:
        service: registry
        environment: staging
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
        maxthreads: 100
      # Enable this to permit delete of the images
      # from registry
      delete:
        enabled: true
      maintenance:
        uploadpurging:
          enabled: true
          age: 168h
          interval: 5m
          dryrun: false
        readonly:
          enabled: false
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
      tls:
        certificate: /etc/docker/registry-ssl/dr.crt
        key: /etc/docker/registry-ssl/dr.key
{{- if .Values.docker_registry.basic_auth }}
    auth:
      htpasswd:
        realm: basic-realm
        path: /etc/registry
{{- end }}
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3

    prometheus:
      enabled: true


  docker_cache_mirror_config:
    version: 0.1
    log:
      accesslog:
        disabled: false
      level: info
      formater: text
    proxy:
      remoteurl: https://registry-1.docker.io

    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
      tls:
        certificate: /etc/docker/registry-ssl/dr.crt
        key: /etc/docker/registry-ssl/dr.key
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
        maxthreads: 100
      # Enable this to permit delete of the images
      # from registry
      delete:
        enabled: true
      maintenance:
        uploadpurging:
          enabled: true
          age: 1h
          interval: 5m
          dryrun: false
        readonly:
          enabled: false


  # TODO: This could be created dynamically
  docker_client_config:
    insecure-registries:
      - "docker-registry1.mottainai.local:5000"
      - "docker-registry-mirror.mottainai.local:5000"
    registry-mirrors:
      - "https://docker-registry-mirror.mottainai.local:5000"
