hooks:

- event: post-group
  node: mongo-rs1
  flags:
    - preparemongocryptofiles
  commands:
    - >-
      echo "${mongo_crypto}" | jq -r ".keymgmt" > /root/initialize-key-mgmt.js &&
      echo "${mongo_crypto}" | jq -r ".createkey" > /root/create-mongodb-data-key.js &&
      echo "${mongo_crypto}" | jq -r ".getkeys" > /root/getKeys.js &&
      echo "${mongo_crypto}" | jq -r ".exitjs" > /root/exit.js

- event: post-group
  node: mongo-rs1
  flags:
    - createmasterkeydb
  commands:
    - |
      echo "
        #################################################
        MASTER KEY GENERATED IS ${mongoenckey}, RECORD IT
        #################################################
      "

- event: post-group
  node: mongo-rs1
  flags:
    - createmasterkeydb
  commands:
    - |
      export hostmongo=$(echo "${node}" | jq -r '.name')".mottainai.local" && \
      export rootusermongo=$(echo "${mongodb_replica_set}" | jq -r ".superuser.user") && \
      export rootpwdmongo=$(echo "${mongodb_replica_set}" | jq -r ".superuser.pwd") && \
      export testusr=$(echo "${mongodb_replica_set}" | jq -r ".users[0].user") && \
      export testpwd=$(echo "${mongodb_replica_set}" | jq -r ".users[0].pwd") && \
      export testdbname=$(echo "${mongodb_replica_set}" | jq -r ".users[0].roles[0].db") && \
      export authdb=$(echo "${mongodb_replica_set}" | jq -r ".users[0].db") && \
      echo "
      hostmongo     ${hostmongo}
      rootusermongo ${rootusermongo}
      rootpwdmongo  ${rootpwdmongo}
      testusr       ${testusr}
      testpwd       ${testpwd}
      testdbname    ${testdbname}
      authdb        ${authdb}
      " && \
      mongosh --quiet --nodb --shell --eval \
      "var mongo_root_user=\"${rootusermongo}\", mongo_root_password=\"${rootpwdmongo}\", mongo_host=\"${hostmongo}\", encryption_master_key=\"${mongoenckey}\", dbtest=\"${testdbname}\"" \
      /root/initialize-key-mgmt.js \
      /root/create-mongodb-data-key.js \
      /root/exit.js

