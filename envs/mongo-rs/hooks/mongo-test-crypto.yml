hooks:
- event: post-group
  node: mongo-rs1
  flags:
    - preparemongocryptofiles
  commands:
    - |
      echo "${mongo_crypto}" | jq -r ".keymgmt" > /root/initialize-key-mgmt.js && \
      echo "${mongo_crypto}" | jq -r ".getConnection" > /root/getConnection.js && \
      echo "${mongo_crypto}" | jq -r ".importKeys" > /root/importKeys.js && \
      echo "${mongo_crypto}" | jq -r ".testfindcrypto" > /root/testfindcrypto.js && \
      echo "${mongo_crypto}" | jq -r ".testfindcrypto" > /root/testfindcrypto.js && \
      echo "${mongo_crypto}" | jq -r ".testinsertcrypto" > /root/testinsertcrypto.js && \
      echo "${mongo_crypto}" | jq -r ".testinsertnormal" > /root/testinsertnormal.js && \
      echo "${mongo_crypto}" | jq -r ".testinsertcrypto" > /root/testinsertcrypto.js && \
      echo "${mongo_crypto}" | jq -r ".testfindclassic" > /root/testfindclassic.js && \
      echo "${mongo_crypto}" | jq -r ".exitjs" > /root/exit.js
- event: post-group
  node: mongo-rs1
  flags:
    - testcrypto
  commands:
    - |
      export mongoencclikey=${mongoclikey} && \
      export hostmongo=$(echo "${node}" | jq -r '.name')".mottainai.local" && \
      export rootusermongo=$(echo "${mongodb_replica_set}" | jq -r ".superuser.user") && \
      export rootpwdmongo=$(echo "${mongodb_replica_set}" | jq -r ".superuser.pwd") && \
      export testusr=$(echo "${mongodb_replica_set}" | jq -r ".users[0].user") && \
      export testpwd=$(echo "${mongodb_replica_set}" | jq -r ".users[0].pwd") && \
      export testdbname=$(echo "${mongodb_replica_set}" | jq -r ".users[0].roles[0].db") && \
      export authdb=$(echo "${mongodb_replica_set}" | jq -r ".users[0].db") && \
      echo "
      hostmongo       ${hostmongo}
      rootusermongo   ${rootusermongo}
      rootpwdmongo    ${rootpwdmongo}
      testusr         ${testusr}
      testpwd         ${testpwd}
      testdbname      ${testdbname}
      authdb          ${authdb}
      mongokey        ${mongokey}
      mongoencclikey  ${mongoencclikey}
      " && \
      evalvar="var mongo_root_user=\"${rootusermongo}\", mongo_root_password=\"${rootpwdmongo}\", mongo_host=\"${hostmongo}\", encryption_master_key=\"${mongokey}\", encryption_client_key=\"${mongoencclikey}\", dbtest=\"${testdbname}\"" && \
      set -x && \
      mongosh --quiet --nodb --shell --eval "${evalvar}" \
      /root/initialize-key-mgmt.js /root/importKeys.js /root/testinsertcrypto.js /root/exit.js && \
      mongosh --quiet --nodb --shell --eval "${evalvar}" \
      /root/initialize-key-mgmt.js /root/testinsertnormal.js /root/exit.js && \
      mongosh --quiet --nodb --shell --eval "${evalvar}" \
      /root/initialize-key-mgmt.js /root/testfindcrypto.js /root/exit.js && \
      cat /root/testfindclassic.js | mongo ${hostmongo}:27017/${testdbname} --username=${testusr} --password=${testpwd} --authenticationDatabase=${authdb}


