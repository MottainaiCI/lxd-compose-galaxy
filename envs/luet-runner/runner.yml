version: "1"

template_engine:
  engine: "mottainai"

include_profiles_files:
- ../common/profiles/net-mottainai0.yml
- ../common/profiles/default.yml
- ../common/profiles/docker.yml
- ../common/profiles/privileged.yml
- ../common/profiles/loop.yml

include_networks_files:
- ../common/networks/mottainai0.yml

include_commands_files:


projects:

  - name: "luet-runner-amd64"
    description: |
      Setup a container to run Luet tasks.

    include_env_files:
      - vars/main.yml

    vars:
      - envs:
          LUET_NOLOCK: "true"
          LUET_YES: "true"
          luet_repo: "https://github.com/funtoo/macaroni-commons.git"
          luet_branch: "master"
          PACKAGES: "macaroni/entities-catalog"
          BUILD_ARGS: "--no-spinner --emoji=true --color=false --pull --only-target-package"
{{ if .Values.luet.enable_docker_host }}
          DOCKER_HOST: "{{ .Values.luet.docker_host }}"
{{ end }}

{{ if .Values.luet.docker_host_ubuntu }}
          ubuntu_packages:
            - docker.io
            - bridge-utils
            - make
            - git
{{ else }}
          luet_packages:
            - app-emulation/docker
            - dev-vcs/git
            - net-misc/bridge-utils
            - sys-devel/make
{{ end }}

    groups:
      - name: "luet"
        description: "Luet compilation node"

        connection: "{{ .Values.connection }}"
        ephemeral: {{ .Values.ephemeral }}
        common_profiles:
          - default
          - net-mottainai0

        include_hooks_files:
{{ if .Values.luet.docker_host_ubuntu }}
          - ../common/hooks/ubuntu-setup.yml
{{ else }}
          - ../common/hooks/luet-packages.yml
{{ end }}

        nodes:
          - name: macaroni-luet
{{ if .Values.luet.docker_host_ubuntu }}
            image_source: "{{ .Values.default_ubuntu_image }}"
            image_remote_server: "images"
{{ else }}
            image_source: "macaroni/funtoo-systemd-minimal"
            image_remote_server: "macaroni"
{{ end }}

            entrypoint:
              - "/bin/bash"
              - "-c"

            profiles:
              {{ if not .Values.enable_docker_host }}
              - docker
              {{ end }}
              - privileged

            sync_resources:
{{ if .Values.luet.docker_registry }}
              - source: ../docker-registry/files/dr.crt
                dst: /tmp/dr.crt
{{ end }}
            # List of commands executed just after the creation of the
            # container.
            hooks:

{{ if not .Values.enable_docker_host }}
              - event: post-node-sync
                flags:
                  - configure_docker
                commands:
                  - >-
                    eval 'mkdir -p /etc/docker || true' &&
                    echo "${docker_daemon}" > /etc/docker/daemon.json
                  - |
                    mkdir /etc/systemd/system/docker.service.d/ -p && \
                    echo '[Service]
                    Environment="BUILDKIT_STEP_LOG_MAX_SIZE=3073741824"
                    Environment="BUILDKIT_STEP_LOG_MAX_SPEED=10240000"
                    ExecStart=
                    ExecStart=/usr/bin/dockerd --containerd=/run/containerd/containerd.sock
                    ' > /etc/systemd/system/docker.service.d/env.conf
{{ end }}

              - event: post-node-sync
                flags:
                  - upgrade
                commands:
                  - >-
                    eval 'mkdir /var/lock/ -p || true' &&
                    luet repo update &&
                    luet upgrade &&
                    luet cleanup --purge-repos
{{ if not .Values.enable_docker_host }}
{{ if not .Values.luet.docker_host_ubuntu }}
                  - >-
                    systemctl start containerd
{{ end }}
                  - >-
                    systemctl daemon-reload &&
                    systemctl start docker
{{ end }}

              - event: pre-node-sync
                flags:
                  - clone_repo
                commands:
                  - eval 'rm -rf /build /tmp/dr.crt || true'
                  - echo "Cloning ${luet_repo} for branch ${luet_branch}..."
                  - git clone ${luet_repo} -b ${luet_branch} /build
                  - mkdir /build/build/ || true

{{ if .Values.luet.docker_registry }}
              - event: post-node-sync
                flags:
                  - docker_registry_login
                commands:
                  #- cp /tmp/mottainai.crt /etc/ssl/certs/
                  - docker login -u ${registry_user} -p ${registry_pass} docker-registry1.{{ .Values.default_internal_domain }}:5000

              - event: post-node-sync
                flags:
                  - copy_registry_certs
                commands:
                  - mv /tmp/dr.crt /etc/ssl/certs/
{{ end }}

              - event: post-node-sync
                flags:
                  - build
                commands:
                  - eval 'rm -rf /build || true'
                  - git clone ${luet_repo} -b ${luet_branch} /build
                  - >-
                    cd /build &&
                    eval 'mkdir /build/build || true' &&
                    make rebuild

{{ if .Values.luet.pull_artefacts_locally }}
              - event: post-node-sync
                node: host
                flags:
                  - pull
                commands:
                  - >-
                    eval 'mkdir ./repos || true' &&
                    lxc file pull {{ .Values.connection }}:macaroni-luet/build/build/ ./tmprepos
                    --recursive &&
                    mv ./tmprepos/build/* ./repos/ &&
                    rm -rf ./tmprepos
{{ end }}
