envs:

  server_config:
   # Mottainai Server Config
   general:
     debug: false
     # Default 
     logfile: '/var/log/mottainai/mottainai-server.log'
     loglevel: 'DEBUG'
     # TLS options
     # tls_cert:
     # tls_key
     # Others logrus options / providers
   #----------------------------------------------
   # Web UI Configuration
   #----------------------------------------------
   web:
     #url: "/"
     url: "/mottainai/"
     listenaddress: '0.0.0.0'
     # Listening port where expose Mottainai WebUI
     port: '19090'
     application_url: "http://mottainai-server.mottainai.local:19090/mottainai"
     # Define Web Interface protocol.
     # Default is http. Values: http or https.
     # protocol: "http"
     # Define application name.
     application_name: "MottainaiCI"
     # Root path ???
     root_path: './'
     # Define value for header Access-Control-Allow-Origin
     # access_control_allow_origin: '*'
     # Enable/Disable Embedded WebHook Server
     embed_webhookserver: True
     # Access Token
     # access_token: ''
     # WebHook Github Parameters
     # github_token: 'xxxx'
     # github_token_user: 'xxx'
     # github_secret: 'xxxx'
     # webhook_token: 'xxxxx'
   broker:
     # Broker type
     type: 'amqp'
     # AMQP Broker for Result
     result_backend: 'amqp://guest:guest@mottainai-broker1.mottainai.local:5672/'
     # Address of Request Broker
     broker: 'amqp://guest:guest@mottainai-broker1.mottainai.local:5672/'
     default_queue: "standard"
     exchange: "jobs"
     # exchange_type: "direct"
     # binding_key: "machinery_task"
     # broker api management (if available)
     mgmt_uri: 'http://mottainai-broker1.mottainai.local:15672'
     user: 'guest'
     pass: 'guest'
     results_expire_in: 3600
   db:
     engine: 'arangodb'
     db_name: "mottainai"
     db_user: "mottainai"
     db_password: "mottainai01"
     db_endpoints:
       - "http://mottainai-database.mottainai.local:8529"
     # Configuration params for tiedot adapter
     # db_path: '/sdpool/mottainai/web/db'
   storage:
     # Define type of storage for users data
     type: 'dir'
     # Artefacts paths
     artefact_path: '/srv/mottainai/web/artefacts'
     # Namespaces path
     namespace_path: '/srv/mottainai/web/namespaces'
     # Storages path
     storage_path: '/srv/mottainai/web/storage'
   # Mottainai agent options
   agent:
     # Standalone mode. Agent task only specific task
     # standalone: False
     # Directory where store building data
     build_path: "/sdpool/mottainai/build"
     concurrency: 1
     # Secret Key of the Agent
     secret_key: "xxxxxxxx"
     executor:
       - "docker"
       - "lxd"
       - "virtualbox"
     # Define operations executed by Agent Healtcheck
     health_check_exec:
        - docker system prune --force --all --volumes
     # health_check_clean_path: 
     # ----------------------------------
     # Docker executor options
     # ----------------------------------
     # Define Docker CAPS
     docker_caps:
       - 'SYS_PTRACE'
