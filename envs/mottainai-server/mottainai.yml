# Author: Daniele Rondina, geaaru@sabayonlinux.org
# Description: Setup Mottainai Server Infrastructure

version: "1"

template_engine:
  engine: "mottainai"

# Define the list of LXD Profiles used by all projects.
# This profiles are not mandatory. An user could create and
# handle his profiles without define the list here.
profiles:
- name: "mottainai-https"
  description: "Profile for export HTTPS port to Host"
  devices:
    https:
      bind: host
      connect: tcp:0.0.0.0:443
      listen: tcp:0.0.0.0:443
      nat: false
      proxy_protocol: true
      type: proxy

- name: "mottainai-api"
  description: "Profile for export Mottainai Server port to Host"
  devices:
    api:
      bind: host
      connect: tcp:127.0.0.1:19090
      listen: tcp:0.0.0.0:19090
      type: proxy

- name: "mottainai-amqp"
  description: "Profile for export RabbitMQ port to Host"
  devices:
    api:
      bind: host
      connect: tcp:127.0.0.1:5672
      listen: tcp:0.0.0.0:5672
      type: proxy

- name: "mottainai-data"
  description: "Mount mottainai data from Host"
  devices:
    storage:
      source: /srv/mottainai/web/storage/
      path: /srv/mottainai/web/storage/
      type: disk

    namespace:
      source: /srv/mottainai/web/namespace/
      path: /srv/mottainai/web/namespace/
      type: disk

    artefacts:
      source: /srv/mottainai/web/artefacts/
      path: /srv/mottainai/web/artefacts/
      type: disk

- name: "arangodb-data"
  description: "Mount ArangoDB data from Host"
  devices:
    arangodbdata:
      source: /var/lib/arangodb3-apps/
      path: /var/lib/arangodb3-apps/
      type: disk

    arangodb:
      source: /var/lib/arangodb3/
      path: /var/lib/arangodb3/
      type: disk

- name: "privileged"
  config:
    security.privileged: "true"
  description: Privileged profile
  devices:
    fuse:
      path: /dev/fuse
      type: unix-char
    tuntap:
      path: /dev/net/tun
      type: unix-char
    # Comment this if zfs is not available.
    zfs:
      path: /dev/zfs
      type: unix-char

- name: "net-mottainai0"
  description: Net mottainai0
  devices:
    eth0:
      name: eth0
      nictype: bridged
      parent: mottainai0
      type: nic

- name: default
  description: Default Storage
  root:
    path: /
    pool: default
    type: disk

- name: flavor-medium
  description: "flavor with 2GB RAM"
  config:
    limits.memory: 2GB

- name: flavor-big
  description: "flavor with 3GB RAM"
  config:
    limits.memory: 3GB

- name: flavor-thin
  description: "flavor with 500MB RAM"
  config:
    limits.memory: 500MB

networks:
  - name: "mottainai0"
    type: "bridge"
    config:
      bridge.driver: native
      dns.domain: mottainai.local
      dns.mode: managed
      ipv4.address: 172.18.10.1/23
      ipv4.dhcp: "true"
      ipv4.firewall: "true"
      ipv4.nat: "true"
      ipv6.nat: "false"
      ipv6.dhcp: "false"

projects:

  - name: "mottainai-server-services"
    description: |
      Setup Mottainai Server, RabbitMQ and Database.

    # Environments files to use with engine. Supported files depends on
    # template engine
    include_env_files:
      - vars/arangodb.yml
      - vars/rabbitmq.yml
      - vars/mottainai.yml
      # To enable mottainai-nginx
      # - vars/cert.yml
      # - vars/ngin

    include_groups_files:
      - groups/arangodb.yaml
      - groups/rabbitmq.yaml
      - groups/server.yaml
      # Active mottainai-nginx frontend
      # - groups/nginx.yml

    vars:
      - envs:
          ACCEPT_LICENSE: "*"
          LUET_NOLOCK: "true"
          LUET_YES: "true"
          yq_version: "3.4.1"
          internal_domain: "mottainai.local"
          mypublic_domain: "example.com"

          enman_repos:
            - https://get.mocaccino.org/scr/geaaru/geaaru
            - https://get.mocaccino.org/scr/devel/devel

          arangodb_packages:
            - app-editors/vim
            - dev-db/arangodb
            - app-metrics/node_exporter

          rabbitmq_packages:
            - app-editors/vim
            - net-misc/rabbitmq-server
            - app-metrics/node_exporter

          server_packages:
            - app-editors/vim
            - app-metrics/node_exporter

    hooks:
      - event: post-node-creation
        commands:
          - sleep 2
          - |
            wget -q -O /usr/bin/yq \
            https://github.com/mikefarah/yq/releases/download/${yq_version}/yq_linux_amd64
          - chmod a+x /usr/bin/yq
